# Task
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: task-go1-19
spec:
  params:     # 传递的参数
    - name: image    # image地址
      description: image url
      type: string
  workspaces:
    - name: config  # configmap内容
      description: configmap workspace
  volumes:
    - name: dockersocket # 挂载本地docker.sock 用于docker build或者是docker push
      hostPath:
        path: /var/run/docker.sock
    - name: temp         # 挂载本地temp目录，用于编译时临时存储二进制，针对一些编译文件可以加载缓存等等
      hostPath:
        path: /tmp
  steps:                # task执行步骤
    - name: go-build                        # 执行步骤名称
      image: golang:1.19.0                  # 执行时容器镜像
      workingDir: /workspace                # 工作目录
      command:                              # 执行编译文件
        - /bin/bash
      args:
        - -c
        - -exu
        - |
          sh $(workspaces.config.path)/go.sh
      env:                                 # 环境变量、这里增加了GOPROXY 和 GO111MODULE，用于go vendor代理
        - name: GOPROXY
          value: "https://mirrors.aliyun.com/goproxy"
        - name: GO111MODULE
          value: "on"
      volumeMounts:
        - name: temp                      # 挂载工作目录
          mountPath: /workspace
    - name: docker-build                  # 执行步骤名称
      image: docker:18.09.9               # 执行时容器镜像
      workingDir: /workspace              # 工作目录
      command:                            # 执行内容，这里主要做 docker build, 编译的地址是通过$image传递
        - /bin/sh
      args:
        - -c
        - -exu
        - |
          pwd
          image=$(params.image)
          docker build -t $image -f $(workspaces.config.path)/Dockerfile  ./
          docker push $image
          docker rmi $image
      volumeMounts:
        - name: dockersocket      # 挂载docker.sock
          mountPath: /var/run/docker.sock
        - name: temp              # 挂载工作目录
          mountPath: /workspace
---
# Pipeline
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: pipeline-go1-19
spec:
  workspaces:
    - name: config  # configmap
  tasks:
    - name: build-image
      taskRef:  # 关联task任务
        name: task-go1-19
      params:   # 传递参数image，这里为想要推送的镜像地址，通常情况会把git地址也传递，这样就可以做到应用间的灵活构建
        - name: image
          value: image.zhihu.com/zhihu/test:v1
      workspaces:
        - name: config # configmap模版
          workspace: config
---
# PipelineRun
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  name: pipeline-run-go1-19
spec:
  pipelineRef:      # 关联Pipeline
    name: pipeline-go1-19
  workspaces:
    - name: config  # 绑定configmap模版
      configMap:
        name: pipeline-go1-19

