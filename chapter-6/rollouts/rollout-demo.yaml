# 创建Deployment信息
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rollout-demo
  name: rollout-demo
  namespace: default
spec:
  replicas: 10
  selector:
    matchLabels:
      app: rollout-demo
  template:
    metadata:
      labels:
        app: rollout-demo
    spec:
      containers:
        - image: nginx:1.7.9
          imagePullPolicy: IfNotPresent
          name: rollout-demo
          ports:
            - containerPort: 80
              name: http-port
              protocol: TCP
          resources: {}
---
# 创建service信息
apiVersion: v1
kind: Service
metadata:
  labels:
    app: rollout-demo
  name: rollout-demo
  namespace: default
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
  sessionAffinity: None
  type: ClusterIP
---
# 创建Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-demo
spec:
  rules:
    - host: "rollout-demo.zhihu.com"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: "rollout-demo"
                port:
                  number: 80
---
apiVersion: rollouts.kruise.io/v1alpha1
kind: Rollout
metadata:
  name: rollout-demo
  # Rollout 资源需要与相应的工作负载在相同的命名空间中
  namespace: default
  # 此注释可以帮助我们使用分区升级 Deployment，类似于 StatefulSet/CloneSet。
  annotations:
    rollouts.kruise.io/rolling-style: partition
spec:
  objectRef:
    # 发布工作负载的 Rollout，当前仅支持 Deployment、CloneSet、StatefulSet、Advanced StatefulSet
    workloadRef:
      apiVersion: apps/v1
      kind: Deployment
      name: rollout-demo
  strategy:
    canary:
      steps:
        ### 第一批 ###
        # 将 5% 的流量路由到新版本
        - weight: 5
          # 需要手动确认才能进入下一批
          pause: {}
          # 可选，发布副本的第一步。如果未设置，则默认使用“weight”，如上所示为 5%。
          replicas: 1
        ### 第二批 ###
        - replicas: 50%
          # 等待 1 小时后自动进入下一批
          pause:
            duration: 3600
        ### 第三批 ###
        - replicas: 100%
      trafficRoutings:
        # 与工作负载相关的服务名称
        - ingress:
            classType: nginx
            name: ingress-demo
          service: rollout-demo